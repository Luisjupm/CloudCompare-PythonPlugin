name: Build

on: [ push, pull_request ]


jobs:
  Windows-Build:
    name: Windows embedded-modules=${{matrix.use_embedded_modules}}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        use_embedded_modules: [ON, OFF]

    steps:
      - name: Clone CloudCompare
        uses: actions/checkout@v2
        with:
          repository: 'CloudCompare/CloudCompare'
          ref: 'a4ebd61e903c986e18d468df67320cce6378e78f'
          submodules: true

      - name: Clone PythonPlugin
        uses: actions/checkout@v2
        with:
          path: 'plugins/private/CloudCompare-PythonPlugin'

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: CloudCompareDev
          auto-activate-base: false
          python-version: "3.7"
          miniconda-version: 'latest'

      - name: Install Dependencies
        run: |
          conda install -c conda-forge qt=5.12.* pybind11 ninja
          pip install numpy

      - name: Configure MSVC console
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set environment for MSVC
        run: |
          # Set these env vars so cmake picks the correct compiler
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
          echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure CMake
        shell: pwsh
        run: |
          mkdir build
          cmake  `
            -G Ninja `
            -B build `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX=install `
            -DPLUGIN_PYTHON=ON `
            -DPLUGIN_PYTHON_USE_EMBEDDED_MODULES=${{ matrix.use_embedded_modules }} `
            .

      - name: Build
        run: cmake --build build --parallel

      - name: Install
        run: cmake --install build

      - name: Run Tests
        run: |
          pip install pytest
          cd plugins/private/CloudCompare-PythonPlugin
          pytest --cloudcompare_exe ${{ github.workspace }}/install/CloudCompare/CloudCompare.exe tests

  Ubuntu-Build:
    name: Ubuntu
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install build-essential cmake ninja-build libqt5svg5-dev libqt5opengl5-dev qt5-default qttools5-dev qttools5-dev-tools pybind11-dev xvfb
          python3 -m pip install pytest numpy

      - name: Clone CloudCompare
        uses: actions/checkout@v2
        with:
          repository: 'CloudCompare/CloudCompare'
          ref: 'a4ebd61e903c986e18d468df67320cce6378e78f'
          submodules: true

      - name: Clone PythonPlugin
        uses: actions/checkout@v2
        with:
          path: 'plugins/private/CloudCompare-PythonPlugin'

      - name: Configure CMake
        shell: pwsh
        run: |
          mkdir build
          cmake  `
            -G Ninja `
            -B build `
            -DPLUGIN_PYTHON=ON `
            -DCMAKE_BUILD_TYPE=Release `
            .

      - name: Build
        run: cmake --build build --parallel

      - name: Install
        run: sudo cmake --install build

      - name: Run Tests
        run: |
          cd plugins/private/CloudCompare-PythonPlugin
          export LD_LIBRARY_PATH=/usr/local/lib
          xvfb-run python3 -m pytest --cloudcompare_exe /usr/local/bin/CloudCompare tests


  Windows-Wheels:
    name: "Windows Wheels"
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: CloudCompareDev
          auto-activate-base: false
          python-version: "3.7"
          miniconda-version: 'latest'

      - name: Install Dependencies
        run: conda install -c conda-forge qt=5.12.*

      - name: Configure MSVC console
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set environment for MSVC
        run: |
          # Set these env vars so cmake picks the correct compiler
          # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
          echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: pip install cccorelib
        working-directory: "./wrapper"
        run: pip install -v .\cccorelib

      - name: pip install pycc
        working-directory: "./wrapper"
        run: pip install -v .\pycc

      - name: test cccorelib & cccorelib
        run: |
          pip install pytest
          pytest wrapper\cccorelib\tests
          pytest wrapper\pycc\tests

  Ubuntu-Wheels:
    name: "Ubuntu Wheels"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install build-essential cmake ninja-build libqt5svg5-dev libqt5opengl5-dev qt5-default qttools5-dev qttools5-dev-tools pybind11-dev xvfb
          python3 -m pip install pytest

      - name: pip install cccorelib
        working-directory: "./wrapper"
        run: pip install -v ./cccorelib

      - name: pip install pycc
        working-directory: "./wrapper"
        run: pip install -v ./pycc

      - name: test cccorelib & cccorelib
        run: |
          pip install pytest
          pytest wrapper/cccorelib/tests
          pytest wrapper/pycc/tests

